extends inc/main

block style
    :less(minify=true)
        .note p {
            font-size: 13px !important;
            line-height: 20px;
        }

        .btn-success {
            margin-top: 10px;
        }

        .panel-heading {
            h3 {
                margin-bottom: 0;
            }
        }

        .col-md-4 {
            h4 {
                margin-top: 0;
            }
        }

        .travels i {
            margin: 0 5px;
            color: green;
        }

        .pay .col-xs-8 hr {
            width: 70%;
            left: 105px;
            top: 2px;
        }

block content

    mixin carInput(name,price,from,to,type)
        input.tt(name=name id=f.randomChar(4) data-from=from data-to=to data-price=price type='checkbox' data-type=type)
    .panel
        .panel-heading
            h2= title
    .panel
        each it in _items
            script.
                p_#{it._id} = !{JSON.stringify({title:it.title})};
            .panel-heading
                h3= it.title
                    if it.star == 1
                        span.text-danger *
            .panel-body.travels(id=it._id)
                .row
                    .col-md-4.r0
                        if it.refFile && it.refFile.car
                            -var _slides = it.refFile.car || []
                            -var _prop = 'car'
                            -var _ctx = it
                            -var _sid = 'carss'+i
                            include inc/slide
                    .col-md-4
                        if it.airport
                            for tt in it.airport
                                h4.text-center= tt.type == 'pickup'? 'Airport Pickup': 'Airport Transfer'
                                p.row
                                    span.col-md-3.text-right
                                        +carInput(tt.type,tt.price,tt.from,tt.to,tt.type)
                                    span.col-md-2 $#{tt.price}
                                    span.col-md-7
                                        = tt.from
                                        != f.icon('arrow-right')
                                        = tt.to
                        h4.text-center Tour guide
                        p.row
                            span.col-md-3.text-right
                                +carInput('guide',it.guideFee,null,null,'guide')
                            span.col-md-2 $#{it.guideFee}
                            span.col-md-7 Transfer only

                        hr
                        h4.text-center Great Wall Transfer
                        if it.spot
                            for tt in it.spot
                                p.row
                                    span.col-md-3.text-right
                                        +carInput('spot',tt.price,tt.from,tt.to,tt.type)
                                    span.col-md-2 $#{tt.price}
                                    span.col-md-7.r0
                                        = tt.from
                                        != f.icon('resize-horizontal')
                                        = tt.to

                    .col-md-4
                        h4 NOTE
                        .note!= it.note
                    .col-md-12
                        a.btn.btn-block.btn-success.btn-small(href='#!/bookCar/#{it._id}' data-title=it.title) Select & Book
    script.
        _shows = '';

block st
    :coffee(bare=true,minify=true)
        cfc = cf._carService = {}

        $('.travels').on 'change', '.tt',(e)->
            t = util.ct(e)
            id = t.closest('.travels').attr('id')
            cl = (cfc[id] ?= [])
            if t.is(':checked') # 选中
                it =
                    id: t.attr('id')
                    price: t.data 'price'
                    form: t.data 'from'
                    to: t.data 'to'
                    type: t.data 'type'

                title = switch it.type
                    when 'pickup'
                        "Airport Pickup<br/><small>$#{it.price} #{it.form} to #{it.to}</small>"
                    when 'transfer'
                        "Airport Transfer<br/><small>$#{it.price} #{it.form} to #{it.to}</small>"
                    when 'greatWall'
                        "Great Wall Transfer<br/><small>$#{it.price} #{it.form} to/from #{it.to}</small>"


                it.title = title
                cl.push it
            else
                cl.delBy(t.data('id'))

        loadJS "#{cf.modPath}tour.js", ->
            app.enhance
                routes:
                    '!/bookCar/:id': 'bookCar'
                bookCar: (id)->
                    obj = window["p_#{id}"]
                    cars = cf._carService["#{id}"]
                    log cars
                    if !cars or cars.length is 0
                        popMsg 'Please choose service option firstly', 'warning'
                        app.navigate '#', {trigger: true}
                        return
                    steps = [
                        'Select Services'
                        'Pay Deposit'
                        'Booking Confirmation'
                    ]
                    new cf.view.sForm
                        parent: @ctn.empty()
                        saveByStep: false
                        className: 'pay'
                        entity: 'deal'
                        tmpl: 'pay'
                        syncBox: '.review'
                        context: ->
                            steps: steps
                            title: 'Build Your Private Car Service In Beijing'
                        data:
                            car:
                                title: obj.title
                                _id: id
                        items: [
                            tmpl: 'carService'
                            context: ->
                                steps: steps
                                title: obj.title
                                num: 1
                                cars: cars
                        ,
                            tmpl: 'deposit'
                            context: ->
                                steps: steps
                                num: 3
                                title: obj.title
                                data: {}  # @model.attributes
                        ,
                            tmpl: 'confirmation'
                            context: ->
                                steps: steps
                                title: obj.title
                                num:4
                        ]